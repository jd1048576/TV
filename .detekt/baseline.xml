<SmellBaseline>
    <Whitelist>
        <ID>TooManyFunctions:ListTypeConverter.kt$ListTypeConverter$ListTypeConverter</ID>
        <ID>ComplexMethod:RemoteGenre.kt$RemoteGenre.Companion$createFromId</ID>
        <ID>TooGenericExceptionCaught:Request.kt$Request$e: Exception</ID>
        <ID>LongParameterList:RemoteSeasonListAdapter.kt$RemoteSeasonListAdapter.TransientSeason$( @Json(name = "air_date") val airDate: Instant = INSTANT_ZERO, @Json(name = "episode_count") val episodeCount: Int, @Json(name = "id") val id: Long, @Json(name = "name") val name: String, @Json(name = "overview") val overview: String?, @Json(name = "poster_path") val posterPath: String?, @Json(name = "season_number") val seasonNumber: Int )</ID>
        <ID>LongParameterList:RemoteCast.kt$RemoteCast$( @Json(name = "character") val character: String, @Json(name = "credit_id") val creditId: String, @Json(name = "gender") val gender: Int = 0, @Json(name = "id") val id: Long, @Json(name = "name") val name: String, @Json(name = "order") val order: Int, @Json(name = "profile_path") val profilePath: String? )</ID>
        <ID>LongParameterList:RemoteCrew.kt$RemoteCrew$( @Json(name = "credit_id") val creditId: String, @Json(name = "department") val department: String, @Json(name = "gender") val gender: Int = 0, @Json(name = "id") val id: Long, @Json(name = "job") val job: String, @Json(name = "name") val name: String, @Json(name = "profile_path") val profilePath: String? )</ID>
        <ID>LongParameterList:RemoteDetailedShow.kt$RemoteDetailedShow$( @Json(name = "backdrop_path") val backdropPath: String?, @Json(name = "content_ratings") val contentRatings: ContentRatings, @Json(name = "created_by") val createdByList: List&lt;RemoteCreatedBy&gt;, @Json(name = "credits") val credits: Credits, @Json(name = "episode_run_time") val episodeRunTimeList: List&lt;Int&gt;, @Json(name = "external_ids") val externalIds: RemoteExternalIds, @Json(name = "first_air_date") val firstAirDate: Instant = INSTANT_ZERO, @Json(name = "genres") val genreList: List&lt;RemoteGenre&gt;, @Json(name = "homepage") val homepage: String, @Json(name = "id") val id: Long, @Json(name = "in_production") val inProduction: Boolean, @Json(name = "languages") val languageList: List&lt;String&gt;, @Json(name = "last_air_date") val lastAirDate: Instant = INSTANT_ZERO, @Json(name = "name") val name: String, @Json(name = "networks") val networkList: List&lt;RemoteNetwork&gt;, @Json(name = "number_of_episodes") val numberOfEpisodes: Int, @Json(name = "number_of_seasons") val numberOfSeasons: Int, @Json(name = "origin_country") val originCountryList: List&lt;String&gt;, @Json(name = "original_language") val originalLanguage: String, @Json(name = "original_name") val originalName: String, @Json(name = "overview") val overview: String, @Json(name = "popularity") val popularity: Double, @Json(name = "poster_path") val posterPath: String?, @Json(name = "production_companies") val productionCompanyList: List&lt;RemoteProductionCompany&gt;, @Json(name = "recommendations") val recommendations: RemoteShowList, @Json(name = "similar") val similar: RemoteShowList, @Json(name = "status") val status: String, @Json(name = "type") val type: String, @Json(name = "videos") val videos: Videos, @Json(name = "vote_average") val voteAverage: Double, @Json(name = "vote_count") val voteCount: Int )</ID>
        <ID>LongParameterList:RemoteEpisode.kt$RemoteEpisode$( @Json(name = "air_date") val airDate: Instant = INSTANT_ZERO, @Json(name = "episode_number") val episodeNumber: Int, @Json(name = "id") val id: Long, @Json(name = "name") val name: String, @Json(name = "overview") val overview: String?, @Json(name = "production_code") val productionCode: String?, @Json(name = "season_number") val seasonNumber: Int, @Json(name = "show_id") val showId: Long, @Json(name = "still_path") val stillPath: String?, @Json(name = "vote_average") val voteAverage: Double, @Json(name = "vote_count") val voteCount: Int, @Json(name = "crew") val crew: List&lt;RemoteCrew&gt;, @Json(name = "guest_stars") val guestStarList: List&lt;RemoteCast&gt; )</ID>
        <ID>LongParameterList:RemoteExternalIds.kt$RemoteExternalIds$( @Json(name = "facebook_id") val facebookId: String?, @Json(name = "freebase_id") val freebaseId: String?, @Json(name = "freebase_mid") val freebaseMid: String?, @Json(name = "imdb_id") val imdbId: String?, @Json(name = "instagram_id") val instagramId: String?, @Json(name = "tvdb_id") val tvdbId: Int?, @Json(name = "tvrage_id") val tvrageId: Int?, @Json(name = "twitter_id") val twitterId: String? )</ID>
        <ID>LongParameterList:RemoteSeason.kt$RemoteSeason$( val airDate: Instant, val id: Long, val episodesList: List&lt;RemoteEpisode&gt;, val name: String, val overview: String?, val posterPath: String?, val showId: Long, val seasonNumber: Int )</ID>
        <ID>LongParameterList:RemoteShow.kt$RemoteShow$( @Json(name = "backdrop_path") val backdropPath: String?, @Json(name = "first_air_date") val firstAirDate: Instant = INSTANT_ZERO, @Json(name = "genre_ids") val genreList: List&lt;RemoteGenre&gt;, @Json(name = "id") val id: Long, @Json(name = "name") val name: String, @Json(name = "origin_country") val originCountryList: List&lt;String&gt;, @Json(name = "original_language") val originalLanguage: String, @Json(name = "original_name") val originalName: String, @Json(name = "overview") val overview: String, @Json(name = "popularity") val popularity: Double, @Json(name = "poster_path") val posterPath: String?, @Json(name = "vote_average") val voteAverage: Double, @Json(name = "vote_count") val voteCount: Int )</ID>
        <ID>LongParameterList:RemoteVideo.kt$RemoteVideo$( @Json(name = "id") val id: String, @Json(name = "iso_3166_1") val iso31661: String, @Json(name = "iso_639_1") val iso6391: String, @Json(name = "key") val key: String, @Json(name = "name") val name: String, @Json(name = "site") val site: String, @Json(name = "size") val size: Int, @Json(name = "type") val type: String )</ID>
    </Whitelist>
</SmellBaseline>