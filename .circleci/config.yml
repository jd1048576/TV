version: 2.1

executors:
  android_executor:
    docker:
      - image: circleci/android:api-29
    environment:
      JVM_OPTS: "-Xmx3200m"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
      TERM: dumb
    working_directory: ~/workspace
  go_executor:
    docker:
      - image: circleci/golang:1.12.9
    environment:
      TITLE: "Latest"
      BODY: "Latest Master Build"
      TAG: "LATEST"
      ARTIFACTS: "./artifacts"
    working_directory: ~/workspace

commands:
  restore_workspace:
    description: Restore Workspace
    steps:
      - checkout
      - attach_workspace:
          at: ~/workspace
      - restore_cache:
          name: Restore Gradle Wrapper Cache
          keys:
            - gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          name: Restore Gradle Dependency Cache
          keys:
            - gradle-cache-{{ checksum "buildSrc/src/main/java/Dependencies.kt" }}
  save_workspace:
    description: Save Workspace
    steps:
      - save_cache:
          name: Save Gradle Wrapper Cache
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
          paths:
            - ~/.gradle/wrapper/
      - save_cache:
          name: Save Gradle Dependency Cache
          key: gradle-cache-{{ checksum "buildSrc/src/main/java/Dependencies.kt" }}
          paths:
            - ~/.gradle/caches/
      - persist_to_workspace:
          root: ~/workspace
          paths:
            - ./*/build
  setup:
    description: Setup
    steps:
      - run:
          name: Setup
          command: ./.circleci/scripts/setup
  tear_down:
    description: Tear Down
    steps:
      - run:
          name: Tear Down
          command: ./.circleci/scripts/tear_down
          when: always
  create_apk:
    description: Create Debug and Release Apk from Bundles
    steps:
      - run:
          name: Create Apk
          command: ./.circleci/scripts/create_apk
      - persist_to_workspace:
          root: ~/workspace/artifacts
          paths:
            - .

jobs:
  build:
    executor: android_executor
    steps:
      - restore_workspace
      - run:
          name: Download Dependencies
          command: ./gradlew dependencies
      - setup
      - run:
          name: Build Bundle
          command: ./gradlew assemble bundle -x lintVitalRelease # FIXME assembleAndroidTest
      - create_apk
      - tear_down
      - save_workspace
  test:
    executor: android_executor
    steps:
      - restore_workspace
      - run:
          name: Run Tests
          command: ./gradlew test
  check:
    executor: android_executor
    steps:
      - restore_workspace
      - run:
          name: Check App and Dependencies
          command: ./gradlew detektAll spotlessCheck dependencyUpdates
      - store_artifacts:
          path: build/reports/detekt
          destination: detekt
      - store_artifacts:
          path: build/dependencyUpdates
          destination: dependencyUpdates
  deploy_to_github:
    executor: go_executor
    steps:
      - attach_workspace:
          at: ~/workspace/artifacts
      - run:
          name: Install GHR
          command: go get github.com/tcnksm/ghr
      - run:
          name: Deploy to Github
          command: ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -n ${TITLE} -b ${BODY} -delete ${TAG} ${ARTIFACTS}

workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      #      - test:
      #          requires:
      #            - build
      - check:
          requires:
            - build
      - deploy_to_github:
          requires:
            - build
            - check
          filters:
            branches:
              only: master
